// Copyright (C) 2023-2024, NVIDIA CORPORATION.
// SPDX-FileCopyrightText: 2025 Advanced Micro Devices, Inc.
//
// SPDX-License-Identifier: MIT

#include "sampling_post_processing_impl.cuh"

#include "sampling_functions.hpp"

namespace rocgraph
{

    template std::tuple<std::optional<rmm::device_uvector<int32_t>>,
                        rmm::device_uvector<size_t>,
                        rmm::device_uvector<int32_t>,
                        std::optional<rmm::device_uvector<float>>,
                        std::optional<rmm::device_uvector<int32_t>>,
                        std::optional<rmm::device_uvector<int32_t>>,
                        std::optional<rmm::device_uvector<size_t>>,
                        rmm::device_uvector<int32_t>,
                        std::optional<rmm::device_uvector<size_t>>>
        renumber_and_compress_sampled_edgelist(
            raft::handle_t const&                           handle,
            rmm::device_uvector<int32_t>&&                  edgelist_srcs,
            rmm::device_uvector<int32_t>&&                  edgelist_dsts,
            std::optional<rmm::device_uvector<float>>&&     edgelist_weights,
            std::optional<rmm::device_uvector<int32_t>>&&   edgelist_edge_ids,
            std::optional<rmm::device_uvector<int32_t>>&&   edgelist_edge_types,
            std::optional<rmm::device_uvector<int32_t>>&&   edgelist_hops,
            std::optional<raft::device_span<int32_t const>> seed_vertices,
            std::optional<raft::device_span<size_t const>>  seed_vertex_label_offsets,
            std::optional<raft::device_span<size_t const>>  edgelist_label_offsets,
            size_t                                          num_labels,
            size_t                                          num_hops,
            bool                                            src_is_major,
            bool                                            compress_per_hop,
            bool                                            doubly_compress,
            bool                                            do_expensive_check);

    template std::tuple<std::optional<rmm::device_uvector<int32_t>>,
                        rmm::device_uvector<size_t>,
                        rmm::device_uvector<int32_t>,
                        std::optional<rmm::device_uvector<double>>,
                        std::optional<rmm::device_uvector<int32_t>>,
                        std::optional<rmm::device_uvector<int32_t>>,
                        std::optional<rmm::device_uvector<size_t>>,
                        rmm::device_uvector<int32_t>,
                        std::optional<rmm::device_uvector<size_t>>>
        renumber_and_compress_sampled_edgelist(
            raft::handle_t const&                           handle,
            rmm::device_uvector<int32_t>&&                  edgelist_srcs,
            rmm::device_uvector<int32_t>&&                  edgelist_dsts,
            std::optional<rmm::device_uvector<double>>&&    edgelist_weights,
            std::optional<rmm::device_uvector<int32_t>>&&   edgelist_edge_ids,
            std::optional<rmm::device_uvector<int32_t>>&&   edgelist_edge_types,
            std::optional<rmm::device_uvector<int32_t>>&&   edgelist_hops,
            std::optional<raft::device_span<int32_t const>> seed_vertices,
            std::optional<raft::device_span<size_t const>>  seed_vertex_label_offsets,
            std::optional<raft::device_span<size_t const>>  edgelist_label_offsets,
            size_t                                          num_labels,
            size_t                                          num_hops,
            bool                                            src_is_major,
            bool                                            compress_per_hop,
            bool                                            doubly_compress,
            bool                                            do_expensive_check);

    template std::tuple<std::optional<rmm::device_uvector<int32_t>>,
                        rmm::device_uvector<size_t>,
                        rmm::device_uvector<int32_t>,
                        std::optional<rmm::device_uvector<float>>,
                        std::optional<rmm::device_uvector<int64_t>>,
                        std::optional<rmm::device_uvector<int32_t>>,
                        std::optional<rmm::device_uvector<size_t>>,
                        rmm::device_uvector<int32_t>,
                        std::optional<rmm::device_uvector<size_t>>>
        renumber_and_compress_sampled_edgelist(
            raft::handle_t const&                           handle,
            rmm::device_uvector<int32_t>&&                  edgelist_srcs,
            rmm::device_uvector<int32_t>&&                  edgelist_dsts,
            std::optional<rmm::device_uvector<float>>&&     edgelist_weights,
            std::optional<rmm::device_uvector<int64_t>>&&   edgelist_edge_ids,
            std::optional<rmm::device_uvector<int32_t>>&&   edgelist_edge_types,
            std::optional<rmm::device_uvector<int32_t>>&&   edgelist_hops,
            std::optional<raft::device_span<int32_t const>> seed_vertices,
            std::optional<raft::device_span<size_t const>>  seed_vertex_label_offsets,
            std::optional<raft::device_span<size_t const>>  edgelist_label_offsets,
            size_t                                          num_labels,
            size_t                                          num_hops,
            bool                                            src_is_major,
            bool                                            compress_per_hop,
            bool                                            doubly_compress,
            bool                                            do_expensive_check);

    template std::tuple<std::optional<rmm::device_uvector<int32_t>>,
                        rmm::device_uvector<size_t>,
                        rmm::device_uvector<int32_t>,
                        std::optional<rmm::device_uvector<double>>,
                        std::optional<rmm::device_uvector<int64_t>>,
                        std::optional<rmm::device_uvector<int32_t>>,
                        std::optional<rmm::device_uvector<size_t>>,
                        rmm::device_uvector<int32_t>,
                        std::optional<rmm::device_uvector<size_t>>>
        renumber_and_compress_sampled_edgelist(
            raft::handle_t const&                           handle,
            rmm::device_uvector<int32_t>&&                  edgelist_srcs,
            rmm::device_uvector<int32_t>&&                  edgelist_dsts,
            std::optional<rmm::device_uvector<double>>&&    edgelist_weights,
            std::optional<rmm::device_uvector<int64_t>>&&   edgelist_edge_ids,
            std::optional<rmm::device_uvector<int32_t>>&&   edgelist_edge_types,
            std::optional<rmm::device_uvector<int32_t>>&&   edgelist_hops,
            std::optional<raft::device_span<int32_t const>> seed_vertices,
            std::optional<raft::device_span<size_t const>>  seed_vertex_label_offsets,
            std::optional<raft::device_span<size_t const>>  edgelist_label_offsets,
            size_t                                          num_labels,
            size_t                                          num_hops,
            bool                                            src_is_major,
            bool                                            compress_per_hop,
            bool                                            doubly_compress,
            bool                                            do_expensive_check);

    template std::tuple<std::optional<rmm::device_uvector<int64_t>>,
                        rmm::device_uvector<size_t>,
                        rmm::device_uvector<int64_t>,
                        std::optional<rmm::device_uvector<float>>,
                        std::optional<rmm::device_uvector<int64_t>>,
                        std::optional<rmm::device_uvector<int32_t>>,
                        std::optional<rmm::device_uvector<size_t>>,
                        rmm::device_uvector<int64_t>,
                        std::optional<rmm::device_uvector<size_t>>>
        renumber_and_compress_sampled_edgelist(
            raft::handle_t const&                           handle,
            rmm::device_uvector<int64_t>&&                  edgelist_srcs,
            rmm::device_uvector<int64_t>&&                  edgelist_dsts,
            std::optional<rmm::device_uvector<float>>&&     edgelist_weights,
            std::optional<rmm::device_uvector<int64_t>>&&   edgelist_edge_ids,
            std::optional<rmm::device_uvector<int32_t>>&&   edgelist_edge_types,
            std::optional<rmm::device_uvector<int32_t>>&&   edgelist_hops,
            std::optional<raft::device_span<int64_t const>> seed_vertices,
            std::optional<raft::device_span<size_t const>>  seed_vertex_label_offsets,
            std::optional<raft::device_span<size_t const>>  edgelist_label_offsets,
            size_t                                          num_labels,
            size_t                                          num_hops,
            bool                                            src_is_major,
            bool                                            compress_per_hop,
            bool                                            doubly_compress,
            bool                                            do_expensive_check);

    template std::tuple<std::optional<rmm::device_uvector<int64_t>>,
                        rmm::device_uvector<size_t>,
                        rmm::device_uvector<int64_t>,
                        std::optional<rmm::device_uvector<double>>,
                        std::optional<rmm::device_uvector<int64_t>>,
                        std::optional<rmm::device_uvector<int32_t>>,
                        std::optional<rmm::device_uvector<size_t>>,
                        rmm::device_uvector<int64_t>,
                        std::optional<rmm::device_uvector<size_t>>>
        renumber_and_compress_sampled_edgelist(
            raft::handle_t const&                           handle,
            rmm::device_uvector<int64_t>&&                  edgelist_srcs,
            rmm::device_uvector<int64_t>&&                  edgelist_dsts,
            std::optional<rmm::device_uvector<double>>&&    edgelist_weights,
            std::optional<rmm::device_uvector<int64_t>>&&   edgelist_edge_ids,
            std::optional<rmm::device_uvector<int32_t>>&&   edgelist_edge_types,
            std::optional<rmm::device_uvector<int32_t>>&&   edgelist_hops,
            std::optional<raft::device_span<int64_t const>> seed_vertices,
            std::optional<raft::device_span<size_t const>>  seed_vertex_label_offsets,
            std::optional<raft::device_span<size_t const>>  edgelist_label_offsets,
            size_t                                          num_labels,
            size_t                                          num_hops,
            bool                                            src_is_major,
            bool                                            compress_per_hop,
            bool                                            doubly_compress,
            bool                                            do_expensive_check);

    template std::tuple<rmm::device_uvector<int32_t>,
                        rmm::device_uvector<int32_t>,
                        std::optional<rmm::device_uvector<float>>,
                        std::optional<rmm::device_uvector<int32_t>>,
                        std::optional<rmm::device_uvector<int32_t>>,
                        std::optional<rmm::device_uvector<size_t>>,
                        rmm::device_uvector<int32_t>,
                        std::optional<rmm::device_uvector<size_t>>>
        renumber_and_sort_sampled_edgelist(
            raft::handle_t const&                           handle,
            rmm::device_uvector<int32_t>&&                  edgelist_srcs,
            rmm::device_uvector<int32_t>&&                  edgelist_dsts,
            std::optional<rmm::device_uvector<float>>&&     edgelist_weights,
            std::optional<rmm::device_uvector<int32_t>>&&   edgelist_edge_ids,
            std::optional<rmm::device_uvector<int32_t>>&&   edgelist_edge_types,
            std::optional<rmm::device_uvector<int32_t>>&&   edgelist_hops,
            std::optional<raft::device_span<int32_t const>> seed_vertices,
            std::optional<raft::device_span<size_t const>>  seed_vertex_label_offsets,
            std::optional<raft::device_span<size_t const>>  edgelist_label_offsets,
            size_t                                          num_labels,
            size_t                                          num_hops,
            bool                                            src_is_major,
            bool                                            do_expensive_check);

    template std::tuple<rmm::device_uvector<int32_t>,
                        rmm::device_uvector<int32_t>,
                        std::optional<rmm::device_uvector<double>>,
                        std::optional<rmm::device_uvector<int32_t>>,
                        std::optional<rmm::device_uvector<int32_t>>,
                        std::optional<rmm::device_uvector<size_t>>,
                        rmm::device_uvector<int32_t>,
                        std::optional<rmm::device_uvector<size_t>>>
        renumber_and_sort_sampled_edgelist(
            raft::handle_t const&                           handle,
            rmm::device_uvector<int32_t>&&                  edgelist_srcs,
            rmm::device_uvector<int32_t>&&                  edgelist_dsts,
            std::optional<rmm::device_uvector<double>>&&    edgelist_weights,
            std::optional<rmm::device_uvector<int32_t>>&&   edgelist_edge_ids,
            std::optional<rmm::device_uvector<int32_t>>&&   edgelist_edge_types,
            std::optional<rmm::device_uvector<int32_t>>&&   edgelist_hops,
            std::optional<raft::device_span<int32_t const>> seed_vertices,
            std::optional<raft::device_span<size_t const>>  seed_vertex_label_offsets,
            std::optional<raft::device_span<size_t const>>  edgelist_label_offsets,
            size_t                                          num_labels,
            size_t                                          num_hops,
            bool                                            src_is_major,
            bool                                            do_expensive_check);

    template std::tuple<rmm::device_uvector<int32_t>,
                        rmm::device_uvector<int32_t>,
                        std::optional<rmm::device_uvector<float>>,
                        std::optional<rmm::device_uvector<int64_t>>,
                        std::optional<rmm::device_uvector<int32_t>>,
                        std::optional<rmm::device_uvector<size_t>>,
                        rmm::device_uvector<int32_t>,
                        std::optional<rmm::device_uvector<size_t>>>
        renumber_and_sort_sampled_edgelist(
            raft::handle_t const&                           handle,
            rmm::device_uvector<int32_t>&&                  edgelist_srcs,
            rmm::device_uvector<int32_t>&&                  edgelist_dsts,
            std::optional<rmm::device_uvector<float>>&&     edgelist_weights,
            std::optional<rmm::device_uvector<int64_t>>&&   edgelist_edge_ids,
            std::optional<rmm::device_uvector<int32_t>>&&   edgelist_edge_types,
            std::optional<rmm::device_uvector<int32_t>>&&   edgelist_hops,
            std::optional<raft::device_span<int32_t const>> seed_vertices,
            std::optional<raft::device_span<size_t const>>  seed_vertex_label_offsets,
            std::optional<raft::device_span<size_t const>>  edgelist_label_offsets,
            size_t                                          num_labels,
            size_t                                          num_hops,
            bool                                            src_is_major,
            bool                                            do_expensive_check);

    template std::tuple<rmm::device_uvector<int32_t>,
                        rmm::device_uvector<int32_t>,
                        std::optional<rmm::device_uvector<double>>,
                        std::optional<rmm::device_uvector<int64_t>>,
                        std::optional<rmm::device_uvector<int32_t>>,
                        std::optional<rmm::device_uvector<size_t>>,
                        rmm::device_uvector<int32_t>,
                        std::optional<rmm::device_uvector<size_t>>>
        renumber_and_sort_sampled_edgelist(
            raft::handle_t const&                           handle,
            rmm::device_uvector<int32_t>&&                  edgelist_srcs,
            rmm::device_uvector<int32_t>&&                  edgelist_dsts,
            std::optional<rmm::device_uvector<double>>&&    edgelist_weights,
            std::optional<rmm::device_uvector<int64_t>>&&   edgelist_edge_ids,
            std::optional<rmm::device_uvector<int32_t>>&&   edgelist_edge_types,
            std::optional<rmm::device_uvector<int32_t>>&&   edgelist_hops,
            std::optional<raft::device_span<int32_t const>> seed_vertices,
            std::optional<raft::device_span<size_t const>>  seed_vertex_label_offsets,
            std::optional<raft::device_span<size_t const>>  edgelist_label_offsets,
            size_t                                          num_labels,
            size_t                                          num_hops,
            bool                                            src_is_major,
            bool                                            do_expensive_check);

    template std::tuple<rmm::device_uvector<int64_t>,
                        rmm::device_uvector<int64_t>,
                        std::optional<rmm::device_uvector<float>>,
                        std::optional<rmm::device_uvector<int64_t>>,
                        std::optional<rmm::device_uvector<int32_t>>,
                        std::optional<rmm::device_uvector<size_t>>,
                        rmm::device_uvector<int64_t>,
                        std::optional<rmm::device_uvector<size_t>>>
        renumber_and_sort_sampled_edgelist(
            raft::handle_t const&                           handle,
            rmm::device_uvector<int64_t>&&                  edgelist_srcs,
            rmm::device_uvector<int64_t>&&                  edgelist_dsts,
            std::optional<rmm::device_uvector<float>>&&     edgelist_weights,
            std::optional<rmm::device_uvector<int64_t>>&&   edgelist_edge_ids,
            std::optional<rmm::device_uvector<int32_t>>&&   edgelist_edge_types,
            std::optional<rmm::device_uvector<int32_t>>&&   edgelist_hops,
            std::optional<raft::device_span<int64_t const>> seed_vertices,
            std::optional<raft::device_span<size_t const>>  seed_vertex_label_offsets,
            std::optional<raft::device_span<size_t const>>  edgelist_label_offsets,
            size_t                                          num_labels,
            size_t                                          num_hops,
            bool                                            src_is_major,
            bool                                            do_expensive_check);

    template std::tuple<rmm::device_uvector<int64_t>,
                        rmm::device_uvector<int64_t>,
                        std::optional<rmm::device_uvector<double>>,
                        std::optional<rmm::device_uvector<int64_t>>,
                        std::optional<rmm::device_uvector<int32_t>>,
                        std::optional<rmm::device_uvector<size_t>>,
                        rmm::device_uvector<int64_t>,
                        std::optional<rmm::device_uvector<size_t>>>
        renumber_and_sort_sampled_edgelist(
            raft::handle_t const&                           handle,
            rmm::device_uvector<int64_t>&&                  edgelist_srcs,
            rmm::device_uvector<int64_t>&&                  edgelist_dsts,
            std::optional<rmm::device_uvector<double>>&&    edgelist_weights,
            std::optional<rmm::device_uvector<int64_t>>&&   edgelist_edge_ids,
            std::optional<rmm::device_uvector<int32_t>>&&   edgelist_edge_types,
            std::optional<rmm::device_uvector<int32_t>>&&   edgelist_hops,
            std::optional<raft::device_span<int64_t const>> seed_vertices,
            std::optional<raft::device_span<size_t const>>  seed_vertex_label_offsets,
            std::optional<raft::device_span<size_t const>>  edgelist_label_offsets,
            size_t                                          num_labels,
            size_t                                          num_hops,
            bool                                            src_is_major,
            bool                                            do_expensive_check);

    template std::tuple<rmm::device_uvector<int32_t>,
                        rmm::device_uvector<int32_t>,
                        std::optional<rmm::device_uvector<float>>,
                        std::optional<rmm::device_uvector<int32_t>>,
                        std::optional<rmm::device_uvector<int32_t>>,
                        std::optional<rmm::device_uvector<size_t>>>
        sort_sampled_edgelist(raft::handle_t const&                          handle,
                              rmm::device_uvector<int32_t>&&                 edgelist_srcs,
                              rmm::device_uvector<int32_t>&&                 edgelist_dsts,
                              std::optional<rmm::device_uvector<float>>&&    edgelist_weights,
                              std::optional<rmm::device_uvector<int32_t>>&&  edgelist_edge_ids,
                              std::optional<rmm::device_uvector<int32_t>>&&  edgelist_edge_types,
                              std::optional<rmm::device_uvector<int32_t>>&&  edgelist_hops,
                              std::optional<raft::device_span<size_t const>> edgelist_label_offsets,
                              size_t                                         num_labels,
                              size_t                                         num_hops,
                              bool                                           src_is_major,
                              bool                                           do_expensive_check);

    template std::tuple<rmm::device_uvector<int32_t>,
                        rmm::device_uvector<int32_t>,
                        std::optional<rmm::device_uvector<double>>,
                        std::optional<rmm::device_uvector<int32_t>>,
                        std::optional<rmm::device_uvector<int32_t>>,
                        std::optional<rmm::device_uvector<size_t>>>
        sort_sampled_edgelist(raft::handle_t const&                          handle,
                              rmm::device_uvector<int32_t>&&                 edgelist_srcs,
                              rmm::device_uvector<int32_t>&&                 edgelist_dsts,
                              std::optional<rmm::device_uvector<double>>&&   edgelist_weights,
                              std::optional<rmm::device_uvector<int32_t>>&&  edgelist_edge_ids,
                              std::optional<rmm::device_uvector<int32_t>>&&  edgelist_edge_types,
                              std::optional<rmm::device_uvector<int32_t>>&&  edgelist_hops,
                              std::optional<raft::device_span<size_t const>> edgelist_label_offsets,
                              size_t                                         num_labels,
                              size_t                                         num_hops,
                              bool                                           src_is_major,
                              bool                                           do_expensive_check);

    template std::tuple<rmm::device_uvector<int32_t>,
                        rmm::device_uvector<int32_t>,
                        std::optional<rmm::device_uvector<float>>,
                        std::optional<rmm::device_uvector<int64_t>>,
                        std::optional<rmm::device_uvector<int32_t>>,
                        std::optional<rmm::device_uvector<size_t>>>
        sort_sampled_edgelist(raft::handle_t const&                          handle,
                              rmm::device_uvector<int32_t>&&                 edgelist_srcs,
                              rmm::device_uvector<int32_t>&&                 edgelist_dsts,
                              std::optional<rmm::device_uvector<float>>&&    edgelist_weights,
                              std::optional<rmm::device_uvector<int64_t>>&&  edgelist_edge_ids,
                              std::optional<rmm::device_uvector<int32_t>>&&  edgelist_edge_types,
                              std::optional<rmm::device_uvector<int32_t>>&&  edgelist_hops,
                              std::optional<raft::device_span<size_t const>> edgelist_label_offsets,
                              size_t                                         num_labels,
                              size_t                                         num_hops,
                              bool                                           src_is_major,
                              bool                                           do_expensive_check);

    template std::tuple<rmm::device_uvector<int32_t>,
                        rmm::device_uvector<int32_t>,
                        std::optional<rmm::device_uvector<double>>,
                        std::optional<rmm::device_uvector<int64_t>>,
                        std::optional<rmm::device_uvector<int32_t>>,
                        std::optional<rmm::device_uvector<size_t>>>
        sort_sampled_edgelist(raft::handle_t const&                          handle,
                              rmm::device_uvector<int32_t>&&                 edgelist_srcs,
                              rmm::device_uvector<int32_t>&&                 edgelist_dsts,
                              std::optional<rmm::device_uvector<double>>&&   edgelist_weights,
                              std::optional<rmm::device_uvector<int64_t>>&&  edgelist_edge_ids,
                              std::optional<rmm::device_uvector<int32_t>>&&  edgelist_edge_types,
                              std::optional<rmm::device_uvector<int32_t>>&&  edgelist_hops,
                              std::optional<raft::device_span<size_t const>> edgelist_label_offsets,
                              size_t                                         num_labels,
                              size_t                                         num_hops,
                              bool                                           src_is_major,
                              bool                                           do_expensive_check);

    template std::tuple<rmm::device_uvector<int64_t>,
                        rmm::device_uvector<int64_t>,
                        std::optional<rmm::device_uvector<float>>,
                        std::optional<rmm::device_uvector<int64_t>>,
                        std::optional<rmm::device_uvector<int32_t>>,
                        std::optional<rmm::device_uvector<size_t>>>
        sort_sampled_edgelist(raft::handle_t const&                          handle,
                              rmm::device_uvector<int64_t>&&                 edgelist_srcs,
                              rmm::device_uvector<int64_t>&&                 edgelist_dsts,
                              std::optional<rmm::device_uvector<float>>&&    edgelist_weights,
                              std::optional<rmm::device_uvector<int64_t>>&&  edgelist_edge_ids,
                              std::optional<rmm::device_uvector<int32_t>>&&  edgelist_edge_types,
                              std::optional<rmm::device_uvector<int32_t>>&&  edgelist_hops,
                              std::optional<raft::device_span<size_t const>> edgelist_label_offsets,
                              size_t                                         num_labels,
                              size_t                                         num_hops,
                              bool                                           src_is_major,
                              bool                                           do_expensive_check);

    template std::tuple<rmm::device_uvector<int64_t>,
                        rmm::device_uvector<int64_t>,
                        std::optional<rmm::device_uvector<double>>,
                        std::optional<rmm::device_uvector<int64_t>>,
                        std::optional<rmm::device_uvector<int32_t>>,
                        std::optional<rmm::device_uvector<size_t>>>
        sort_sampled_edgelist(raft::handle_t const&                          handle,
                              rmm::device_uvector<int64_t>&&                 edgelist_srcs,
                              rmm::device_uvector<int64_t>&&                 edgelist_dsts,
                              std::optional<rmm::device_uvector<double>>&&   edgelist_weights,
                              std::optional<rmm::device_uvector<int64_t>>&&  edgelist_edge_ids,
                              std::optional<rmm::device_uvector<int32_t>>&&  edgelist_edge_types,
                              std::optional<rmm::device_uvector<int32_t>>&&  edgelist_hops,
                              std::optional<raft::device_span<size_t const>> edgelist_label_offsets,
                              size_t                                         num_labels,
                              size_t                                         num_hops,
                              bool                                           src_is_major,
                              bool                                           do_expensive_check);

} // namespace rocgraph
